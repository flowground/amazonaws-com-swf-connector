{
    "title": "Amazon Simple Workflow Service",
    "description": "Amazon Simple Workflow Service The Amazon Simple Workflow Service (Amazon SWF)\nmakes it easy to build applications that use Amazon's cloud to coordinate work\nacross distributed components. In Amazon SWF, a task represents a logical unit\nof work that is performed by a component of your workflow. Coordinating tasks in\na workflow involves managing intertask dependencies, scheduling, and concurrency\nin accordance with the logical flow of the application.\n\nAmazon SWF gives you full control over implementing tasks and coordinating them\nwithout worrying about underlying complexities such as tracking their progress\nand maintaining their state.\n\nThis documentation serves as reference only. For a broader overview of the\nAmazon SWF programming model, see the Amazon SWF Developer Guide\n[http://docs.aws.amazon.com/amazonswf/latest/developerguide/] .",
    "docsUrl": "https://docs.aws.amazon.com/swf/",
    "url": "https://api.apis.guru/v2/specs/amazonaws.com/swf/2012-01-25/swagger.json",
    "envVars": {},
    "credentials": {
        "fields": {
            "server": {
                "label": "Server",
                "viewClass": "SelectView",
                "model": [
                    "https://swf.amazonaws.com/",
                    "http://swf.amazonaws.com/",
                    "--- Custom URL"
                ],
                "required": true
            },
            "otherServer": {
                "label": "Custom Server URL",
                "viewClass": "TextFieldView"
            },
            "auth_hmac": {
                "label": "Authorization (hmac)",
                "viewClass": "TextFieldView",
                "note": "Amazon Signature authorization v4"
            }
        }
    },
    "triggers": {
        "startFlow": {
            "main": "./lib/triggers/startFlow.js",
            "type": "polling",
            "title": "Start Flow",
            "fields": {}
        }
    },
    "actions": {
        "CountClosedWorkflowExecutions": {
            "main": "./lib/actions/CountClosedWorkflowExecutions.js",
            "title": "CountClosedWorkflowExecutions",
            "description": "Returns the number of closed workflow executions within the given domain that\nmeet the specified filtering criteria.\n\nThis operation is eventually consistent. The results are best effort and may not\nexactly reflect recent updates and changes.\n\n Access Control \n\nYou can use IAM policies to control this action's access to Amazon SWF resources\nas follows:\n\n *  Use a Resource element with the domain name to limit the action to only\n   specified domains.\n   \n   \n *  Use an Action element to allow or deny permission to call this action.\n   \n   \n *  Constrain the following parameters by using a Condition element with the\n   appropriate keys.\n   \n    *   tagFilter.tag: String constraint. The key is swf:tagFilter.tag.\n      \n      \n    *   typeFilter.name: String constraint. The key is swf:typeFilter.name.\n      \n      \n    *   typeFilter.version: String constraint. The key is swf:typeFilter.version.\n      \n      \n   \n   \n\nIf the caller doesn't have sufficient permissions to invoke the action, or the\nparameter values fall outside the specified constraints, the action fails. The\nassociated event attribute's cause parameter is set to OPERATION_NOT_PERMITTED.\nFor details and example IAM policies, see Using IAM to Manage Access to Amazon\nSWF Workflows\n[http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html] in\nthe Amazon SWF Developer Guide.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/CountClosedWorkflowExecutions.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "CountOpenWorkflowExecutions": {
            "main": "./lib/actions/CountOpenWorkflowExecutions.js",
            "title": "CountOpenWorkflowExecutions",
            "description": "Returns the number of open workflow executions within the given domain that meet\nthe specified filtering criteria.\n\nThis operation is eventually consistent. The results are best effort and may not\nexactly reflect recent updates and changes.\n\n Access Control \n\nYou can use IAM policies to control this action's access to Amazon SWF resources\nas follows:\n\n *  Use a Resource element with the domain name to limit the action to only\n   specified domains.\n   \n   \n *  Use an Action element to allow or deny permission to call this action.\n   \n   \n *  Constrain the following parameters by using a Condition element with the\n   appropriate keys.\n   \n    *   tagFilter.tag: String constraint. The key is swf:tagFilter.tag.\n      \n      \n    *   typeFilter.name: String constraint. The key is swf:typeFilter.name.\n      \n      \n    *   typeFilter.version: String constraint. The key is swf:typeFilter.version.\n      \n      \n   \n   \n\nIf the caller doesn't have sufficient permissions to invoke the action, or the\nparameter values fall outside the specified constraints, the action fails. The\nassociated event attribute's cause parameter is set to OPERATION_NOT_PERMITTED.\nFor details and example IAM policies, see Using IAM to Manage Access to Amazon\nSWF Workflows\n[http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html] in\nthe Amazon SWF Developer Guide.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/CountOpenWorkflowExecutions.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "CountPendingActivityTasks": {
            "main": "./lib/actions/CountPendingActivityTasks.js",
            "title": "CountPendingActivityTasks",
            "description": "Returns the estimated number of activity tasks in the specified task list. The\ncount returned is an approximation and isn't guaranteed to be exact. If you\nspecify a task list that no activity task was ever scheduled in then 0 is\nreturned.\n\n Access Control \n\nYou can use IAM policies to control this action's access to Amazon SWF resources\nas follows:\n\n *  Use a Resource element with the domain name to limit the action to only\n   specified domains.\n   \n   \n *  Use an Action element to allow or deny permission to call this action.\n   \n   \n *  Constrain the taskList.name parameter by using a Condition element with the \n   swf:taskList.name key to allow the action to access only certain task lists.\n   \n   \n\nIf the caller doesn't have sufficient permissions to invoke the action, or the\nparameter values fall outside the specified constraints, the action fails. The\nassociated event attribute's cause parameter is set to OPERATION_NOT_PERMITTED.\nFor details and example IAM policies, see Using IAM to Manage Access to Amazon\nSWF Workflows\n[http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html] in\nthe Amazon SWF Developer Guide.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/CountPendingActivityTasks.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "CountPendingDecisionTasks": {
            "main": "./lib/actions/CountPendingDecisionTasks.js",
            "title": "CountPendingDecisionTasks",
            "description": "Returns the estimated number of decision tasks in the specified task list. The\ncount returned is an approximation and isn't guaranteed to be exact. If you\nspecify a task list that no decision task was ever scheduled in then 0 is\nreturned.\n\n Access Control \n\nYou can use IAM policies to control this action's access to Amazon SWF resources\nas follows:\n\n *  Use a Resource element with the domain name to limit the action to only\n   specified domains.\n   \n   \n *  Use an Action element to allow or deny permission to call this action.\n   \n   \n *  Constrain the taskList.name parameter by using a Condition element with the \n   swf:taskList.name key to allow the action to access only certain task lists.\n   \n   \n\nIf the caller doesn't have sufficient permissions to invoke the action, or the\nparameter values fall outside the specified constraints, the action fails. The\nassociated event attribute's cause parameter is set to OPERATION_NOT_PERMITTED.\nFor details and example IAM policies, see Using IAM to Manage Access to Amazon\nSWF Workflows\n[http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html] in\nthe Amazon SWF Developer Guide.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/CountPendingDecisionTasks.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DeprecateActivityType": {
            "main": "./lib/actions/DeprecateActivityType.js",
            "title": "DeprecateActivityType",
            "description": "Deprecates the specified activity type. After an activity type has been\ndeprecated, you cannot create new tasks of that activity type. Tasks of this\ntype that were scheduled before the type was deprecated continue to run.\n\nThis operation is eventually consistent. The results are best effort and may not\nexactly reflect recent updates and changes.\n\n Access Control \n\nYou can use IAM policies to control this action's access to Amazon SWF resources\nas follows:\n\n *  Use a Resource element with the domain name to limit the action to only\n   specified domains.\n   \n   \n *  Use an Action element to allow or deny permission to call this action.\n   \n   \n *  Constrain the following parameters by using a Condition element with the\n   appropriate keys.\n   \n    *   activityType.name: String constraint. The key is swf:activityType.name.\n      \n      \n    *   activityType.version: String constraint. The key is \n      swf:activityType.version.\n      \n      \n   \n   \n\nIf the caller doesn't have sufficient permissions to invoke the action, or the\nparameter values fall outside the specified constraints, the action fails. The\nassociated event attribute's cause parameter is set to OPERATION_NOT_PERMITTED.\nFor details and example IAM policies, see Using IAM to Manage Access to Amazon\nSWF Workflows\n[http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html] in\nthe Amazon SWF Developer Guide.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DeprecateActivityType.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DeprecateDomain": {
            "main": "./lib/actions/DeprecateDomain.js",
            "title": "DeprecateDomain",
            "description": "Deprecates the specified domain. After a domain has been deprecated it cannot be\nused to create new workflow executions or register new types. However, you can\nstill use visibility actions on this domain. Deprecating a domain also\ndeprecates all activity and workflow types registered in the domain. Executions\nthat were started before the domain was deprecated continues to run.\n\nThis operation is eventually consistent. The results are best effort and may not\nexactly reflect recent updates and changes.\n\n Access Control \n\nYou can use IAM policies to control this action's access to Amazon SWF resources\nas follows:\n\n *  Use a Resource element with the domain name to limit the action to only\n   specified domains.\n   \n   \n *  Use an Action element to allow or deny permission to call this action.\n   \n   \n *  You cannot use an IAM policy to constrain this action's parameters.\n   \n   \n\nIf the caller doesn't have sufficient permissions to invoke the action, or the\nparameter values fall outside the specified constraints, the action fails. The\nassociated event attribute's cause parameter is set to OPERATION_NOT_PERMITTED.\nFor details and example IAM policies, see Using IAM to Manage Access to Amazon\nSWF Workflows\n[http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html] in\nthe Amazon SWF Developer Guide.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DeprecateDomain.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DeprecateWorkflowType": {
            "main": "./lib/actions/DeprecateWorkflowType.js",
            "title": "DeprecateWorkflowType",
            "description": "Deprecates the specified workflow type. After a workflow type has been\ndeprecated, you cannot create new executions of that type. Executions that were\nstarted before the type was deprecated continues to run. A deprecated workflow\ntype may still be used when calling visibility actions.\n\nThis operation is eventually consistent. The results are best effort and may not\nexactly reflect recent updates and changes.\n\n Access Control \n\nYou can use IAM policies to control this action's access to Amazon SWF resources\nas follows:\n\n *  Use a Resource element with the domain name to limit the action to only\n   specified domains.\n   \n   \n *  Use an Action element to allow or deny permission to call this action.\n   \n   \n *  Constrain the following parameters by using a Condition element with the\n   appropriate keys.\n   \n    *   workflowType.name: String constraint. The key is swf:workflowType.name.\n      \n      \n    *   workflowType.version: String constraint. The key is \n      swf:workflowType.version.\n      \n      \n   \n   \n\nIf the caller doesn't have sufficient permissions to invoke the action, or the\nparameter values fall outside the specified constraints, the action fails. The\nassociated event attribute's cause parameter is set to OPERATION_NOT_PERMITTED.\nFor details and example IAM policies, see Using IAM to Manage Access to Amazon\nSWF Workflows\n[http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html] in\nthe Amazon SWF Developer Guide.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DeprecateWorkflowType.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DescribeActivityType": {
            "main": "./lib/actions/DescribeActivityType.js",
            "title": "DescribeActivityType",
            "description": "Returns information about the specified activity type. This includes\nconfiguration settings provided when the type was registered and other general\ninformation about the type.\n\n Access Control \n\nYou can use IAM policies to control this action's access to Amazon SWF resources\nas follows:\n\n *  Use a Resource element with the domain name to limit the action to only\n   specified domains.\n   \n   \n *  Use an Action element to allow or deny permission to call this action.\n   \n   \n *  Constrain the following parameters by using a Condition element with the\n   appropriate keys.\n   \n    *   activityType.name: String constraint. The key is swf:activityType.name.\n      \n      \n    *   activityType.version: String constraint. The key is \n      swf:activityType.version.\n      \n      \n   \n   \n\nIf the caller doesn't have sufficient permissions to invoke the action, or the\nparameter values fall outside the specified constraints, the action fails. The\nassociated event attribute's cause parameter is set to OPERATION_NOT_PERMITTED.\nFor details and example IAM policies, see Using IAM to Manage Access to Amazon\nSWF Workflows\n[http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html] in\nthe Amazon SWF Developer Guide.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DescribeActivityType.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DescribeDomain": {
            "main": "./lib/actions/DescribeDomain.js",
            "title": "DescribeDomain",
            "description": "Returns information about the specified domain, including description and\nstatus.\n\n Access Control \n\nYou can use IAM policies to control this action's access to Amazon SWF resources\nas follows:\n\n *  Use a Resource element with the domain name to limit the action to only\n   specified domains.\n   \n   \n *  Use an Action element to allow or deny permission to call this action.\n   \n   \n *  You cannot use an IAM policy to constrain this action's parameters.\n   \n   \n\nIf the caller doesn't have sufficient permissions to invoke the action, or the\nparameter values fall outside the specified constraints, the action fails. The\nassociated event attribute's cause parameter is set to OPERATION_NOT_PERMITTED.\nFor details and example IAM policies, see Using IAM to Manage Access to Amazon\nSWF Workflows\n[http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html] in\nthe Amazon SWF Developer Guide.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DescribeDomain.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DescribeWorkflowExecution": {
            "main": "./lib/actions/DescribeWorkflowExecution.js",
            "title": "DescribeWorkflowExecution",
            "description": "Returns information about the specified workflow execution including its type\nand some statistics.\n\nThis operation is eventually consistent. The results are best effort and may not\nexactly reflect recent updates and changes.\n\n Access Control \n\nYou can use IAM policies to control this action's access to Amazon SWF resources\nas follows:\n\n *  Use a Resource element with the domain name to limit the action to only\n   specified domains.\n   \n   \n *  Use an Action element to allow or deny permission to call this action.\n   \n   \n *  You cannot use an IAM policy to constrain this action's parameters.\n   \n   \n\nIf the caller doesn't have sufficient permissions to invoke the action, or the\nparameter values fall outside the specified constraints, the action fails. The\nassociated event attribute's cause parameter is set to OPERATION_NOT_PERMITTED.\nFor details and example IAM policies, see Using IAM to Manage Access to Amazon\nSWF Workflows\n[http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html] in\nthe Amazon SWF Developer Guide.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DescribeWorkflowExecution.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DescribeWorkflowType": {
            "main": "./lib/actions/DescribeWorkflowType.js",
            "title": "DescribeWorkflowType",
            "description": "Returns information about the specified workflow type. This includes\nconfiguration settings specified when the type was registered and other\ninformation such as creation date, current status, etc.\n\n Access Control \n\nYou can use IAM policies to control this action's access to Amazon SWF resources\nas follows:\n\n *  Use a Resource element with the domain name to limit the action to only\n   specified domains.\n   \n   \n *  Use an Action element to allow or deny permission to call this action.\n   \n   \n *  Constrain the following parameters by using a Condition element with the\n   appropriate keys.\n   \n    *   workflowType.name: String constraint. The key is swf:workflowType.name.\n      \n      \n    *   workflowType.version: String constraint. The key is \n      swf:workflowType.version.\n      \n      \n   \n   \n\nIf the caller doesn't have sufficient permissions to invoke the action, or the\nparameter values fall outside the specified constraints, the action fails. The\nassociated event attribute's cause parameter is set to OPERATION_NOT_PERMITTED.\nFor details and example IAM policies, see Using IAM to Manage Access to Amazon\nSWF Workflows\n[http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html] in\nthe Amazon SWF Developer Guide.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DescribeWorkflowType.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetWorkflowExecutionHistory": {
            "main": "./lib/actions/GetWorkflowExecutionHistory.js",
            "title": "GetWorkflowExecutionHistory",
            "description": "Returns the history of the specified workflow execution. The results may be\nsplit into multiple pages. To retrieve subsequent pages, make the call again\nusing the nextPageToken returned by the initial call.\n\nThis operation is eventually consistent. The results are best effort and may not\nexactly reflect recent updates and changes.\n\n Access Control \n\nYou can use IAM policies to control this action's access to Amazon SWF resources\nas follows:\n\n *  Use a Resource element with the domain name to limit the action to only\n   specified domains.\n   \n   \n *  Use an Action element to allow or deny permission to call this action.\n   \n   \n *  You cannot use an IAM policy to constrain this action's parameters.\n   \n   \n\nIf the caller doesn't have sufficient permissions to invoke the action, or the\nparameter values fall outside the specified constraints, the action fails. The\nassociated event attribute's cause parameter is set to OPERATION_NOT_PERMITTED.\nFor details and example IAM policies, see Using IAM to Manage Access to Amazon\nSWF Workflows\n[http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html] in\nthe Amazon SWF Developer Guide.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetWorkflowExecutionHistory.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "ListActivityTypes": {
            "main": "./lib/actions/ListActivityTypes.js",
            "title": "ListActivityTypes",
            "description": "Returns information about all activities registered in the specified domain that\nmatch the specified name and registration status. The result includes\ninformation like creation date, current status of the activity, etc. The results\nmay be split into multiple pages. To retrieve subsequent pages, make the call\nagain using the nextPageToken returned by the initial call.\n\n Access Control \n\nYou can use IAM policies to control this action's access to Amazon SWF resources\nas follows:\n\n *  Use a Resource element with the domain name to limit the action to only\n   specified domains.\n   \n   \n *  Use an Action element to allow or deny permission to call this action.\n   \n   \n *  You cannot use an IAM policy to constrain this action's parameters.\n   \n   \n\nIf the caller doesn't have sufficient permissions to invoke the action, or the\nparameter values fall outside the specified constraints, the action fails. The\nassociated event attribute's cause parameter is set to OPERATION_NOT_PERMITTED.\nFor details and example IAM policies, see Using IAM to Manage Access to Amazon\nSWF Workflows\n[http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html] in\nthe Amazon SWF Developer Guide.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/ListActivityTypes.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "ListClosedWorkflowExecutions": {
            "main": "./lib/actions/ListClosedWorkflowExecutions.js",
            "title": "ListClosedWorkflowExecutions",
            "description": "Returns a list of closed workflow executions in the specified domain that meet\nthe filtering criteria. The results may be split into multiple pages. To\nretrieve subsequent pages, make the call again using the nextPageToken returned\nby the initial call.\n\nThis operation is eventually consistent. The results are best effort and may not\nexactly reflect recent updates and changes.\n\n Access Control \n\nYou can use IAM policies to control this action's access to Amazon SWF resources\nas follows:\n\n *  Use a Resource element with the domain name to limit the action to only\n   specified domains.\n   \n   \n *  Use an Action element to allow or deny permission to call this action.\n   \n   \n *  Constrain the following parameters by using a Condition element with the\n   appropriate keys.\n   \n    *   tagFilter.tag: String constraint. The key is swf:tagFilter.tag.\n      \n      \n    *   typeFilter.name: String constraint. The key is swf:typeFilter.name.\n      \n      \n    *   typeFilter.version: String constraint. The key is swf:typeFilter.version.\n      \n      \n   \n   \n\nIf the caller doesn't have sufficient permissions to invoke the action, or the\nparameter values fall outside the specified constraints, the action fails. The\nassociated event attribute's cause parameter is set to OPERATION_NOT_PERMITTED.\nFor details and example IAM policies, see Using IAM to Manage Access to Amazon\nSWF Workflows\n[http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html] in\nthe Amazon SWF Developer Guide.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/ListClosedWorkflowExecutions.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "ListDomains": {
            "main": "./lib/actions/ListDomains.js",
            "title": "ListDomains",
            "description": "Returns the list of domains registered in the account. The results may be split\ninto multiple pages. To retrieve subsequent pages, make the call again using the\nnextPageToken returned by the initial call.\n\nThis operation is eventually consistent. The results are best effort and may not\nexactly reflect recent updates and changes.\n\n Access Control \n\nYou can use IAM policies to control this action's access to Amazon SWF resources\nas follows:\n\n *  Use a Resource element with the domain name to limit the action to only\n   specified domains. The element must be set to arn:aws:swf::AccountID:domain/*\n   , where AccountID is the account ID, with no dashes.\n   \n   \n *  Use an Action element to allow or deny permission to call this action.\n   \n   \n *  You cannot use an IAM policy to constrain this action's parameters.\n   \n   \n\nIf the caller doesn't have sufficient permissions to invoke the action, or the\nparameter values fall outside the specified constraints, the action fails. The\nassociated event attribute's cause parameter is set to OPERATION_NOT_PERMITTED.\nFor details and example IAM policies, see Using IAM to Manage Access to Amazon\nSWF Workflows\n[http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html] in\nthe Amazon SWF Developer Guide.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/ListDomains.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "ListOpenWorkflowExecutions": {
            "main": "./lib/actions/ListOpenWorkflowExecutions.js",
            "title": "ListOpenWorkflowExecutions",
            "description": "Returns a list of open workflow executions in the specified domain that meet the\nfiltering criteria. The results may be split into multiple pages. To retrieve\nsubsequent pages, make the call again using the nextPageToken returned by the\ninitial call.\n\nThis operation is eventually consistent. The results are best effort and may not\nexactly reflect recent updates and changes.\n\n Access Control \n\nYou can use IAM policies to control this action's access to Amazon SWF resources\nas follows:\n\n *  Use a Resource element with the domain name to limit the action to only\n   specified domains.\n   \n   \n *  Use an Action element to allow or deny permission to call this action.\n   \n   \n *  Constrain the following parameters by using a Condition element with the\n   appropriate keys.\n   \n    *   tagFilter.tag: String constraint. The key is swf:tagFilter.tag.\n      \n      \n    *   typeFilter.name: String constraint. The key is swf:typeFilter.name.\n      \n      \n    *   typeFilter.version: String constraint. The key is swf:typeFilter.version.\n      \n      \n   \n   \n\nIf the caller doesn't have sufficient permissions to invoke the action, or the\nparameter values fall outside the specified constraints, the action fails. The\nassociated event attribute's cause parameter is set to OPERATION_NOT_PERMITTED.\nFor details and example IAM policies, see Using IAM to Manage Access to Amazon\nSWF Workflows\n[http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html] in\nthe Amazon SWF Developer Guide.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/ListOpenWorkflowExecutions.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "ListWorkflowTypes": {
            "main": "./lib/actions/ListWorkflowTypes.js",
            "title": "ListWorkflowTypes",
            "description": "Returns information about workflow types in the specified domain. The results\nmay be split into multiple pages that can be retrieved by making the call\nrepeatedly.\n\n Access Control \n\nYou can use IAM policies to control this action's access to Amazon SWF resources\nas follows:\n\n *  Use a Resource element with the domain name to limit the action to only\n   specified domains.\n   \n   \n *  Use an Action element to allow or deny permission to call this action.\n   \n   \n *  You cannot use an IAM policy to constrain this action's parameters.\n   \n   \n\nIf the caller doesn't have sufficient permissions to invoke the action, or the\nparameter values fall outside the specified constraints, the action fails. The\nassociated event attribute's cause parameter is set to OPERATION_NOT_PERMITTED.\nFor details and example IAM policies, see Using IAM to Manage Access to Amazon\nSWF Workflows\n[http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html] in\nthe Amazon SWF Developer Guide.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/ListWorkflowTypes.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "PollForActivityTask": {
            "main": "./lib/actions/PollForActivityTask.js",
            "title": "PollForActivityTask",
            "description": "Used by workers to get an ActivityTask from the specified activity taskList.\nThis initiates a long poll, where the service holds the HTTP connection open and\nresponds as soon as a task becomes available. The maximum time the service holds\non to the request before responding is 60 seconds. If no task is available\nwithin 60 seconds, the poll returns an empty result. An empty result, in this\ncontext, means that an ActivityTask is returned, but that the value of taskToken\nis an empty string. If a task is returned, the worker should use its type to\nidentify and process it correctly.\n\nWorkers should set their client side socket timeout to at least 70 seconds (10\nseconds higher than the maximum time service may hold the poll request).\n\n Access Control \n\nYou can use IAM policies to control this action's access to Amazon SWF resources\nas follows:\n\n *  Use a Resource element with the domain name to limit the action to only\n   specified domains.\n   \n   \n *  Use an Action element to allow or deny permission to call this action.\n   \n   \n *  Constrain the taskList.name parameter by using a Condition element with the \n   swf:taskList.name key to allow the action to access only certain task lists.\n   \n   \n\nIf the caller doesn't have sufficient permissions to invoke the action, or the\nparameter values fall outside the specified constraints, the action fails. The\nassociated event attribute's cause parameter is set to OPERATION_NOT_PERMITTED.\nFor details and example IAM policies, see Using IAM to Manage Access to Amazon\nSWF Workflows\n[http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html] in\nthe Amazon SWF Developer Guide.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PollForActivityTask.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "PollForDecisionTask": {
            "main": "./lib/actions/PollForDecisionTask.js",
            "title": "PollForDecisionTask",
            "description": "Used by deciders to get a DecisionTask from the specified decision taskList. A\ndecision task may be returned for any open workflow execution that is using the\nspecified task list. The task includes a paginated view of the history of the\nworkflow execution. The decider should use the workflow type and the history to\ndetermine how to properly handle the task.\n\nThis action initiates a long poll, where the service holds the HTTP connection\nopen and responds as soon a task becomes available. If no decision task is\navailable in the specified task list before the timeout of 60 seconds expires,\nan empty result is returned. An empty result, in this context, means that a\nDecisionTask is returned, but that the value of taskToken is an empty string.\n\nDeciders should set their client side socket timeout to at least 70 seconds (10\nseconds higher than the timeout).\n\nBecause the number of workflow history events for a single workflow execution\nmight be very large, the result returned might be split up across a number of\npages. To retrieve subsequent pages, make additional calls to \nPollForDecisionTask using the nextPageToken returned by the initial call. Note\nthat you do not call GetWorkflowExecutionHistory with this nextPageToken.\nInstead, call PollForDecisionTask again.\n\n Access Control \n\nYou can use IAM policies to control this action's access to Amazon SWF resources\nas follows:\n\n *  Use a Resource element with the domain name to limit the action to only\n   specified domains.\n   \n   \n *  Use an Action element to allow or deny permission to call this action.\n   \n   \n *  Constrain the taskList.name parameter by using a Condition element with the \n   swf:taskList.name key to allow the action to access only certain task lists.\n   \n   \n\nIf the caller doesn't have sufficient permissions to invoke the action, or the\nparameter values fall outside the specified constraints, the action fails. The\nassociated event attribute's cause parameter is set to OPERATION_NOT_PERMITTED.\nFor details and example IAM policies, see Using IAM to Manage Access to Amazon\nSWF Workflows\n[http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html] in\nthe Amazon SWF Developer Guide.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PollForDecisionTask.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "RecordActivityTaskHeartbeat": {
            "main": "./lib/actions/RecordActivityTaskHeartbeat.js",
            "title": "RecordActivityTaskHeartbeat",
            "description": "Used by activity workers to report to the service that the ActivityTask \nrepresented by the specified taskToken is still making progress. The worker can\nalso specify details of the progress, for example percent complete, using the \ndetails parameter. This action can also be used by the worker as a mechanism to\ncheck if cancellation is being requested for the activity task. If a\ncancellation is being attempted for the specified task, then the boolean \ncancelRequested flag returned by the service is set to true.\n\nThis action resets the taskHeartbeatTimeout clock. The taskHeartbeatTimeout is\nspecified in RegisterActivityType.\n\nThis action doesn't in itself create an event in the workflow execution history.\nHowever, if the task times out, the workflow execution history contains a \nActivityTaskTimedOut event that contains the information from the last heartbeat\ngenerated by the activity worker.\n\nThe taskStartToCloseTimeout of an activity type is the maximum duration of an\nactivity task, regardless of the number of RecordActivityTaskHeartbeat requests\nreceived. The taskStartToCloseTimeout is also specified in RegisterActivityType.\n\nThis operation is only useful for long-lived activities to report liveliness of\nthe task and to determine if a cancellation is being attempted.\n\nIf the cancelRequested flag returns true, a cancellation is being attempted. If\nthe worker can cancel the activity, it should respond with \nRespondActivityTaskCanceled. Otherwise, it should ignore the cancellation\nrequest.\n\n Access Control \n\nYou can use IAM policies to control this action's access to Amazon SWF resources\nas follows:\n\n *  Use a Resource element with the domain name to limit the action to only\n   specified domains.\n   \n   \n *  Use an Action element to allow or deny permission to call this action.\n   \n   \n *  You cannot use an IAM policy to constrain this action's parameters.\n   \n   \n\nIf the caller doesn't have sufficient permissions to invoke the action, or the\nparameter values fall outside the specified constraints, the action fails. The\nassociated event attribute's cause parameter is set to OPERATION_NOT_PERMITTED.\nFor details and example IAM policies, see Using IAM to Manage Access to Amazon\nSWF Workflows\n[http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html] in\nthe Amazon SWF Developer Guide.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/RecordActivityTaskHeartbeat.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "RegisterActivityType": {
            "main": "./lib/actions/RegisterActivityType.js",
            "title": "RegisterActivityType",
            "description": "Registers a new activity type along with its configuration settings in the\nspecified domain.\n\nA TypeAlreadyExists fault is returned if the type already exists in the domain.\nYou cannot change any configuration settings of the type after its registration,\nand it must be registered as a new version.\n\n Access Control \n\nYou can use IAM policies to control this action's access to Amazon SWF resources\nas follows:\n\n *  Use a Resource element with the domain name to limit the action to only\n   specified domains.\n   \n   \n *  Use an Action element to allow or deny permission to call this action.\n   \n   \n *  Constrain the following parameters by using a Condition element with the\n   appropriate keys.\n   \n    *   defaultTaskList.name: String constraint. The key is \n      swf:defaultTaskList.name.\n      \n      \n    *   name: String constraint. The key is swf:name.\n      \n      \n    *   version: String constraint. The key is swf:version.\n      \n      \n   \n   \n\nIf the caller doesn't have sufficient permissions to invoke the action, or the\nparameter values fall outside the specified constraints, the action fails. The\nassociated event attribute's cause parameter is set to OPERATION_NOT_PERMITTED.\nFor details and example IAM policies, see Using IAM to Manage Access to Amazon\nSWF Workflows\n[http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html] in\nthe Amazon SWF Developer Guide.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/RegisterActivityType.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "RegisterDomain": {
            "main": "./lib/actions/RegisterDomain.js",
            "title": "RegisterDomain",
            "description": "Registers a new domain.\n\n Access Control \n\nYou can use IAM policies to control this action's access to Amazon SWF resources\nas follows:\n\n *  You cannot use an IAM policy to control domain access for this action. The\n   name of the domain being registered is available as the resource of this\n   action.\n   \n   \n *  Use an Action element to allow or deny permission to call this action.\n   \n   \n *  You cannot use an IAM policy to constrain this action's parameters.\n   \n   \n\nIf the caller doesn't have sufficient permissions to invoke the action, or the\nparameter values fall outside the specified constraints, the action fails. The\nassociated event attribute's cause parameter is set to OPERATION_NOT_PERMITTED.\nFor details and example IAM policies, see Using IAM to Manage Access to Amazon\nSWF Workflows\n[http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html] in\nthe Amazon SWF Developer Guide.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/RegisterDomain.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "RegisterWorkflowType": {
            "main": "./lib/actions/RegisterWorkflowType.js",
            "title": "RegisterWorkflowType",
            "description": "Registers a new workflow type and its configuration settings in the specified\ndomain.\n\nThe retention period for the workflow history is set by the RegisterDomain \naction.\n\nIf the type already exists, then a TypeAlreadyExists fault is returned. You\ncannot change the configuration settings of a workflow type once it is\nregistered and it must be registered as a new version.\n\n Access Control \n\nYou can use IAM policies to control this action's access to Amazon SWF resources\nas follows:\n\n *  Use a Resource element with the domain name to limit the action to only\n   specified domains.\n   \n   \n *  Use an Action element to allow or deny permission to call this action.\n   \n   \n *  Constrain the following parameters by using a Condition element with the\n   appropriate keys.\n   \n    *   defaultTaskList.name: String constraint. The key is \n      swf:defaultTaskList.name.\n      \n      \n    *   name: String constraint. The key is swf:name.\n      \n      \n    *   version: String constraint. The key is swf:version.\n      \n      \n   \n   \n\nIf the caller doesn't have sufficient permissions to invoke the action, or the\nparameter values fall outside the specified constraints, the action fails. The\nassociated event attribute's cause parameter is set to OPERATION_NOT_PERMITTED.\nFor details and example IAM policies, see Using IAM to Manage Access to Amazon\nSWF Workflows\n[http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html] in\nthe Amazon SWF Developer Guide.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/RegisterWorkflowType.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "RequestCancelWorkflowExecution": {
            "main": "./lib/actions/RequestCancelWorkflowExecution.js",
            "title": "RequestCancelWorkflowExecution",
            "description": "Records a WorkflowExecutionCancelRequested event in the currently running\nworkflow execution identified by the given domain, workflowId, and runId. This\nlogically requests the cancellation of the workflow execution as a whole. It is\nup to the decider to take appropriate actions when it receives an execution\nhistory with this event.\n\nIf the runId isn't specified, the WorkflowExecutionCancelRequested event is\nrecorded in the history of the current open workflow execution with the\nspecified workflowId in the domain.\n\nBecause this action allows the workflow to properly clean up and gracefully\nclose, it should be used instead of TerminateWorkflowExecution when possible.\n\n Access Control \n\nYou can use IAM policies to control this action's access to Amazon SWF resources\nas follows:\n\n *  Use a Resource element with the domain name to limit the action to only\n   specified domains.\n   \n   \n *  Use an Action element to allow or deny permission to call this action.\n   \n   \n *  You cannot use an IAM policy to constrain this action's parameters.\n   \n   \n\nIf the caller doesn't have sufficient permissions to invoke the action, or the\nparameter values fall outside the specified constraints, the action fails. The\nassociated event attribute's cause parameter is set to OPERATION_NOT_PERMITTED.\nFor details and example IAM policies, see Using IAM to Manage Access to Amazon\nSWF Workflows\n[http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html] in\nthe Amazon SWF Developer Guide.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/RequestCancelWorkflowExecution.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "RespondActivityTaskCanceled": {
            "main": "./lib/actions/RespondActivityTaskCanceled.js",
            "title": "RespondActivityTaskCanceled",
            "description": "Used by workers to tell the service that the ActivityTask identified by the \ntaskToken was successfully canceled. Additional details can be provided using\nthe details argument.\n\nThese details (if provided) appear in the ActivityTaskCanceled event added to\nthe workflow history.\n\nOnly use this operation if the canceled flag of a RecordActivityTaskHeartbeat \nrequest returns true and if the activity can be safely undone or abandoned.\n\nA task is considered open from the time that it is scheduled until it is closed.\nTherefore a task is reported as open while a worker is processing it. A task is\nclosed after it has been specified in a call to RespondActivityTaskCompleted,\nRespondActivityTaskCanceled, RespondActivityTaskFailed, or the task has timed\nout\n[http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dg-basic.html#swf-dev-timeout-types]\n.\n\n Access Control \n\nYou can use IAM policies to control this action's access to Amazon SWF resources\nas follows:\n\n *  Use a Resource element with the domain name to limit the action to only\n   specified domains.\n   \n   \n *  Use an Action element to allow or deny permission to call this action.\n   \n   \n *  You cannot use an IAM policy to constrain this action's parameters.\n   \n   \n\nIf the caller doesn't have sufficient permissions to invoke the action, or the\nparameter values fall outside the specified constraints, the action fails. The\nassociated event attribute's cause parameter is set to OPERATION_NOT_PERMITTED.\nFor details and example IAM policies, see Using IAM to Manage Access to Amazon\nSWF Workflows\n[http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html] in\nthe Amazon SWF Developer Guide.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/RespondActivityTaskCanceled.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "RespondActivityTaskCompleted": {
            "main": "./lib/actions/RespondActivityTaskCompleted.js",
            "title": "RespondActivityTaskCompleted",
            "description": "Used by workers to tell the service that the ActivityTask identified by the \ntaskToken completed successfully with a result (if provided). The result appears\nin the ActivityTaskCompleted event in the workflow history.\n\nIf the requested task doesn't complete successfully, use \nRespondActivityTaskFailed instead. If the worker finds that the task is canceled\nthrough the canceled flag returned by RecordActivityTaskHeartbeat, it should\ncancel the task, clean up and then call RespondActivityTaskCanceled.\n\nA task is considered open from the time that it is scheduled until it is closed.\nTherefore a task is reported as open while a worker is processing it. A task is\nclosed after it has been specified in a call to RespondActivityTaskCompleted, \nRespondActivityTaskCanceled, RespondActivityTaskFailed, or the task has timed\nout\n[http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dg-basic.html#swf-dev-timeout-types]\n.\n\n Access Control \n\nYou can use IAM policies to control this action's access to Amazon SWF resources\nas follows:\n\n *  Use a Resource element with the domain name to limit the action to only\n   specified domains.\n   \n   \n *  Use an Action element to allow or deny permission to call this action.\n   \n   \n *  You cannot use an IAM policy to constrain this action's parameters.\n   \n   \n\nIf the caller doesn't have sufficient permissions to invoke the action, or the\nparameter values fall outside the specified constraints, the action fails. The\nassociated event attribute's cause parameter is set to OPERATION_NOT_PERMITTED.\nFor details and example IAM policies, see Using IAM to Manage Access to Amazon\nSWF Workflows\n[http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html] in\nthe Amazon SWF Developer Guide.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/RespondActivityTaskCompleted.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "RespondActivityTaskFailed": {
            "main": "./lib/actions/RespondActivityTaskFailed.js",
            "title": "RespondActivityTaskFailed",
            "description": "Used by workers to tell the service that the ActivityTask identified by the \ntaskToken has failed with reason (if specified). The reason and details appear\nin the ActivityTaskFailed event added to the workflow history.\n\nA task is considered open from the time that it is scheduled until it is closed.\nTherefore a task is reported as open while a worker is processing it. A task is\nclosed after it has been specified in a call to RespondActivityTaskCompleted, \nRespondActivityTaskCanceled, RespondActivityTaskFailed, or the task has timed\nout\n[http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dg-basic.html#swf-dev-timeout-types]\n.\n\n Access Control \n\nYou can use IAM policies to control this action's access to Amazon SWF resources\nas follows:\n\n *  Use a Resource element with the domain name to limit the action to only\n   specified domains.\n   \n   \n *  Use an Action element to allow or deny permission to call this action.\n   \n   \n *  You cannot use an IAM policy to constrain this action's parameters.\n   \n   \n\nIf the caller doesn't have sufficient permissions to invoke the action, or the\nparameter values fall outside the specified constraints, the action fails. The\nassociated event attribute's cause parameter is set to OPERATION_NOT_PERMITTED.\nFor details and example IAM policies, see Using IAM to Manage Access to Amazon\nSWF Workflows\n[http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html] in\nthe Amazon SWF Developer Guide.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/RespondActivityTaskFailed.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "RespondDecisionTaskCompleted": {
            "main": "./lib/actions/RespondDecisionTaskCompleted.js",
            "title": "RespondDecisionTaskCompleted",
            "description": "Used by deciders to tell the service that the DecisionTask identified by the \ntaskToken has successfully completed. The decisions argument specifies the list\nof decisions made while processing the task.\n\nA DecisionTaskCompleted event is added to the workflow history. The \nexecutionContext specified is attached to the event in the workflow execution\nhistory.\n\n Access Control \n\nIf an IAM policy grants permission to use RespondDecisionTaskCompleted, it can\nexpress permissions for the list of decisions in the decisions parameter. Each\nof the decisions has one or more parameters, much like a regular API call. To\nallow for policies to be as readable as possible, you can express permissions on\ndecisions as if they were actual API calls, including applying conditions to\nsome parameters. For more information, see Using IAM to Manage Access to Amazon\nSWF Workflows\n[http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html] in\nthe Amazon SWF Developer Guide.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/RespondDecisionTaskCompleted.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "SignalWorkflowExecution": {
            "main": "./lib/actions/SignalWorkflowExecution.js",
            "title": "SignalWorkflowExecution",
            "description": "Records a WorkflowExecutionSignaled event in the workflow execution history and\ncreates a decision task for the workflow execution identified by the given\ndomain, workflowId and runId. The event is recorded with the specified user\ndefined signalName and input (if provided).\n\nIf a runId isn't specified, then the WorkflowExecutionSignaled event is recorded\nin the history of the current open workflow with the matching workflowId in the\ndomain.\n\nIf the specified workflow execution isn't open, this method fails with \nUnknownResource.\n\n Access Control \n\nYou can use IAM policies to control this action's access to Amazon SWF resources\nas follows:\n\n *  Use a Resource element with the domain name to limit the action to only\n   specified domains.\n   \n   \n *  Use an Action element to allow or deny permission to call this action.\n   \n   \n *  You cannot use an IAM policy to constrain this action's parameters.\n   \n   \n\nIf the caller doesn't have sufficient permissions to invoke the action, or the\nparameter values fall outside the specified constraints, the action fails. The\nassociated event attribute's cause parameter is set to OPERATION_NOT_PERMITTED.\nFor details and example IAM policies, see Using IAM to Manage Access to Amazon\nSWF Workflows\n[http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html] in\nthe Amazon SWF Developer Guide.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/SignalWorkflowExecution.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "StartWorkflowExecution": {
            "main": "./lib/actions/StartWorkflowExecution.js",
            "title": "StartWorkflowExecution",
            "description": "Starts an execution of the workflow type in the specified domain using the\nprovided workflowId and input data.\n\nThis action returns the newly started workflow execution.\n\n Access Control \n\nYou can use IAM policies to control this action's access to Amazon SWF resources\nas follows:\n\n *  Use a Resource element with the domain name to limit the action to only\n   specified domains.\n   \n   \n *  Use an Action element to allow or deny permission to call this action.\n   \n   \n *  Constrain the following parameters by using a Condition element with the\n   appropriate keys.\n   \n    *   tagList.member.0: The key is swf:tagList.member.0.\n      \n      \n    *   tagList.member.1: The key is swf:tagList.member.1.\n      \n      \n    *   tagList.member.2: The key is swf:tagList.member.2.\n      \n      \n    *   tagList.member.3: The key is swf:tagList.member.3.\n      \n      \n    *   tagList.member.4: The key is swf:tagList.member.4.\n      \n      \n    *   taskList: String constraint. The key is swf:taskList.name.\n      \n      \n    *   workflowType.name: String constraint. The key is swf:workflowType.name.\n      \n      \n    *   workflowType.version: String constraint. The key is \n      swf:workflowType.version.\n      \n      \n   \n   \n\nIf the caller doesn't have sufficient permissions to invoke the action, or the\nparameter values fall outside the specified constraints, the action fails. The\nassociated event attribute's cause parameter is set to OPERATION_NOT_PERMITTED.\nFor details and example IAM policies, see Using IAM to Manage Access to Amazon\nSWF Workflows\n[http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html] in\nthe Amazon SWF Developer Guide.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/StartWorkflowExecution.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "TerminateWorkflowExecution": {
            "main": "./lib/actions/TerminateWorkflowExecution.js",
            "title": "TerminateWorkflowExecution",
            "description": "Records a WorkflowExecutionTerminated event and forces closure of the workflow\nexecution identified by the given domain, runId, and workflowId. The child\npolicy, registered with the workflow type or specified when starting this\nexecution, is applied to any open child workflow executions of this workflow\nexecution.\n\nIf the identified workflow execution was in progress, it is terminated\nimmediately.\n\nIf a runId isn't specified, then the WorkflowExecutionTerminated event is\nrecorded in the history of the current open workflow with the matching\nworkflowId in the domain.\n\nYou should consider using RequestCancelWorkflowExecution action instead because\nit allows the workflow to gracefully close while TerminateWorkflowExecution \ndoesn't.\n\n Access Control \n\nYou can use IAM policies to control this action's access to Amazon SWF resources\nas follows:\n\n *  Use a Resource element with the domain name to limit the action to only\n   specified domains.\n   \n   \n *  Use an Action element to allow or deny permission to call this action.\n   \n   \n *  You cannot use an IAM policy to constrain this action's parameters.\n   \n   \n\nIf the caller doesn't have sufficient permissions to invoke the action, or the\nparameter values fall outside the specified constraints, the action fails. The\nassociated event attribute's cause parameter is set to OPERATION_NOT_PERMITTED.\nFor details and example IAM policies, see Using IAM to Manage Access to Amazon\nSWF Workflows\n[http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html] in\nthe Amazon SWF Developer Guide.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/TerminateWorkflowExecution.in.json",
                "out": {
                    "type": "object"
                }
            }
        }
    }
}